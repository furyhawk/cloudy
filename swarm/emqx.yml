services:
  emqx1:
    image: emqx:latest
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx", "ctl", "status"]
      interval: 60s
      timeout: 25s
      retries: 5
    networks:
      - traefik-public
    # ports:
    #   - target: 1883
    #     published: 1883
    #     mode: host
    #   - "1883:1883"
    #   - 8083:8083
    #   - 8084:8084
    #   - 8883:8883
    #   - 18083:18083
    volumes:
      - emqx-data1:/opt/emqx/data
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.tcp.routers.emqx1-tcp-mqtt.entrypoints=mqtt
        - traefik.tcp.routers.emqx1-tcp-mqtt.rule=HostSNI(`*`)
        - traefik.tcp.routers.emqx1-tcp-mqtt.service=emqx1-tcp-mqtt
        - traefik.tcp.services.emqx1-tcp-mqtt.loadbalancer.server.port=1883
        - traefik.tcp.routers.emqx1-tcp-ws.entrypoints=web-socket
        - traefik.tcp.routers.emqx1-tcp-ws.rule=HostSNI(`*`)
        - traefik.tcp.routers.emqx1-tcp-ws.service=emqx1-tcp-ws
        - traefik.tcp.services.emqx1-tcp-ws.loadbalancer.server.port=8083
        - traefik.tcp.routers.emqx1-tcp-wss.entrypoints=web-socket-secure
        - traefik.tcp.routers.emqx1-tcp-wss.rule=HostSNIRegexp(`^.+\\.${DOMAIN}$`)
        - traefik.tcp.routers.emqx1-tcp-wss.tls.certresolver=le
        - traefik.tcp.routers.emqx1-tcp-wss.service=emqx1-tcp-wss
        - traefik.tcp.services.emqx1-tcp-wss.loadbalancer.server.port=8084
        - traefik.http.routers.emqx1.entrypoints=https
        - traefik.http.routers.emqx1.rule=Host(`mqtt.${DOMAIN}`)
        - traefik.http.routers.emqx1.tls.certresolver=le
        - traefik.http.routers.emqx1.service=emqx-dashboard
        - traefik.http.services.emqx-dashboard.loadbalancer.server.port=18083
        - traefik.http.routers.emqx1-web.entrypoints=web-socket
        - traefik.http.routers.emqx1-web.rule=Host(`broker.${DOMAIN}`) || Host(`mqtt.${DOMAIN}`) || Host(`mqttx.${DOMAIN}`)
        - traefik.http.routers.emqx1-web.tls.certresolver=le
        - traefik.http.routers.emqx1-web.service=emqx1-web
        - traefik.http.services.emqx1-web.loadbalancer.server.port=8083
        - traefik.http.routers.emqx1-wss.entrypoints=web-socket-secure
        - traefik.http.routers.emqx1-wss.rule=Host(`broker.${DOMAIN}`) || Host(`mqtt.${DOMAIN}`) || Host(`mqttx.${DOMAIN}`)
        - traefik.http.routers.emqx1-wss.tls.certresolver=le
        - traefik.http.routers.emqx1-wss.service=emqx1-wss
        - traefik.http.services.emqx1-wss.loadbalancer.server.port=8084

  mqttx-web:
    image: emqx/mqttx-web:latest
    restart: unless-stopped
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.mqttx-web.entrypoints=https
        - traefik.http.routers.mqttx-web.rule=Host(`mqttx.${DOMAIN}`)
        - traefik.http.routers.mqttx-web.tls.certresolver=le
        - traefik.http.routers.mqttx-web.service=mqttx-web-service
        - traefik.http.services.mqttx-web-service.loadbalancer.server.port=80

networks:
  traefik-public:
    external: true

volumes:
  emqx-data1:
    driver: local
