services:

  cyberchef:
    image: mpepping/cyberchef:latest
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.cyberchef.entrypoints=https
        - traefik.http.routers.cyberchef.rule=Host(`cook.${DOMAIN}`)
        - traefik.http.routers.cyberchef.tls.certresolver=le
        - traefik.http.routers.cyberchef.service=cyberchef
        - traefik.http.services.cyberchef.loadbalancer.server.port=8000

  librespeed:
    # ghcr.io/librespeed/speedtest:latest
    # lscr.io/linuxserver/librespeed:latest
    image: ghcr.io/librespeed/speedtest:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - PASSWORD=${DATABASE__PASSWORD}
      - MODE=standalone
    user: "1000:1000"
    volumes:
      - librespeed_data:/config
    # ports:
    #   - 80:80
    restart: unless-stopped
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.librespeed.entrypoints=https
        - traefik.http.routers.librespeed.rule=Host(`speed.${DOMAIN}`) || Host(`speedtest.${DOMAIN}`)
        - traefik.http.routers.librespeed.tls.certresolver=le
        - traefik.http.routers.librespeed.service=librespeed_app
        - traefik.http.services.librespeed_app.loadbalancer.server.port=80

  linx:
    image: furyhawk/linx-server-anime
    command: -config /data/linx-server.conf
    user: "1000:1000"
    volumes:
      - /var/data/files:/data/files
      - /var/data/meta:/data/meta
      - /var/data/config/linx/linx-server.conf:/data/linx-server.conf:ro
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.linx.entrypoints=https
        - traefik.http.routers.linx.rule=Host(`linx.${DOMAIN}`)
        - traefik.http.routers.linx.tls.certresolver=le
        - traefik.http.routers.linx.service=linx_app
        - traefik.http.services.linx_app.loadbalancer.server.port=8080


  wetty:
    image: wettyoss/wetty
    command:
      - --base=/
    environment:
      SSHHOST: ${DOMAIN}
      SSHPORT: ${SSHPORT}
      NODE_ENV: 'development'
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.wetty.entrypoints=https
        - traefik.http.routers.wetty.rule=Host(`terminal.${DOMAIN}`)
        - traefik.http.routers.wetty.tls.certresolver=le
        - traefik.http.routers.wetty.service=wetty_app
        - "traefik.http.services.wetty_app.loadbalancer.server.port=3000"
        # - "traefik.http.routers.wetty.middlewares=forward-auth@file"

  whisper_web:
    image: furyhawk/whisper-web
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.whisper_web.entrypoints=https
        - traefik.http.routers.whisper_web.rule=Host(`whisper.${DOMAIN}`)
        - traefik.http.routers.whisper_web.tls.certresolver=le
        - traefik.http.routers.whisper_web.service=whisper_web
        - traefik.http.services.whisper_web.loadbalancer.server.port=4173

volumes:
  librespeed_data:

networks:
  traefik-public:
    external: true